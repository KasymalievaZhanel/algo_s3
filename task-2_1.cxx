/****************************************************************************
Задача 2_1.

Даны два массива целых чисел одинаковой длины A[0..n-1] и
B[0..n-1]. Необходимо найти *первую* пару индексов i0 и j0, i0 ≤ j0,
такую что A[i0] + B[j0] = max{ A[i] + B[j], где 0 <= i < n,
0 <= j < n, i <= j}. Время работы - O(n).
n ≤ 100000.

  in         | out
  -----------|-----
  4          | 0 1
  4 -8 6 0   |
  -10 3 1 1  |
****************************************************************************/

#include <iostream>



int main()
{
  int n;
  std::cin >> n;
  int *A = new int[n];
  int *B = new int[n];
  
  for( int i = 0; i < n; ++i )
    std::cin >> A[i];
  
  for( int i = 0; i < n; ++i )
    std::cin >> B[i];

  // Строю массив, на каждой i-ой позиции которого
  // стоит максимальное значение из отрезка [0..i].
  for( int i = 1; i < n; ++i )
    if( A[i] < A[i-1] ) A[i] = A[i-1];

  // Тогда сумма i-ых членов будет максимально возможной
  // для данного i. Из всех таких сумм мы берем максимальную.
  int indB = 0;
  int maxSum = A[0] + B[0];
  for( int i = 1; i < n; ++i )
    if ( A[i] + B[i] > maxSum ) 
    {
      maxSum = A[i] + B[i];
      indB = i;
    }

  // Ищем когда впервый раз было установлено максимальное
  // значение из массива А для найденного indB
  int indA = indB;
  while( A[indA] == A[indA - 1] )
    indA--;

  std::cout << indA << " " << indB << std::endl;

  delete [] A;
  delete [] B;
  return 0;
}

